{"version":3,"sources":["components/Main.jsx","components/Avaliations.jsx","components/BestMovies.jsx","components/Family.jsx","routes/index.jsx","App.js","index.js"],"names":["cards","document","querySelector","movieList","infos","index","Main","useState","movie","setMovie","results","setResults","GetMovie","a","api_key","fetch","response","json","data","backdrop_path","overview","vote_average","poster_path","release_date","title","id","console","log","date","split","year","video_response","video_data","key","BuildCard","Keep","card","createElement","classList","add","innerHTML","appendChild","push","localStorage","setItem","JSON","stringify","refreshPage","setTimeout","location","reload","useEffect","list","getItem","i","length","items","div","parse","getSheet","className","to","onClick","onSubmit","event","preventDefault","type","placeholder","onKeyUp","target","value","onclick","src","alt","Avaliations","newresults","undefined","style","marginBottom","size","BestMovies","Family","Routes","path","component","exact","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.743cd4e1.chunk.js","sourcesContent":["import {MdLocalMovies} from 'react-icons/md'\r\nimport {FaSearch} from 'react-icons/fa'\r\nimport {MdClose} from 'react-icons/md'\r\nimport {IoMdTrash} from 'react-icons/io'\r\nimport { useEffect, useState } from \"react\"\r\nimport GetMovie from './Main'\r\nimport {Link} from 'react-router-dom'\r\nconst cards = document.querySelector('#cards')\r\nvar movieList = []\r\nvar infos = []\r\nvar index = 0\r\nfunction Main(){\r\n    const [movie, setMovie] = useState('')\r\n    var [results, setResults] = useState({})\r\n    useEffect(()=>{getSheet()}, [])\r\n    function getSheet(){\r\n        var list = localStorage.getItem('movielist')  \r\n        if (list!=null && list!=''){\r\n            movieList = list.split(',')\r\n            for(var i = 0; i < movieList.length; i++){\r\n                const items = localStorage.getItem(movieList[i])\r\n                var div = JSON.parse(items)\r\n                \r\n                const card = document.createElement('div')\r\n                card.classList.add('card')\r\n                card.innerHTML = `            \r\n                <p class=\"click-display\" onclick=openOverview(this) id=${index}><i id=${index} class=\"fas fa-trash\" onclick=remove(this)></i>Sinopse</p>\r\n                <p class='popularity' id=${div.vote_average}>${div.vote_average}</p>\r\n                <h1 class='movie-title'>${div.title}</h1>\r\n                <img src=${`https://image.tmdb.org/t/p/w500${div.poster_path}`}    alt=\"Poster do Filme\" class='poster' />\r\n                <h2 class='year'>${div.year}</h2>\r\n                \r\n                `\r\n                cards.appendChild(card)\r\n                index ++\r\n            }\r\n        }\r\n        else{\r\n            return\r\n        }}\r\n    async function GetMovie(movie){\r\n      \r\n      const api_key = 'd18a4f16ec6506238fafbda0ee9d740d'\r\n      const response= await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${movie}&language=pt-br`)\r\n      const data = await response.json()\r\n      var {results} = data\r\n      const {backdrop_path, overview, vote_average, poster_path, release_date, title, id} = results[0]\r\n      console.log(id)\r\n      const date = release_date.split('-')\r\n      const year = date[0]\r\n      const video_response = await fetch (`\r\n      https://api.themoviedb.org/3/movie/${id}/videos?api_key=${api_key}&language=en-US`)\r\n      const video_data = await video_response.json()\r\n      var {results} = video_data\r\n      const {key} = results[0]\r\n      setResults({backdrop_path, overview, vote_average, poster_path,year, title, id})\r\n      BuildCard({backdrop_path, overview, vote_average, poster_path,year, title})\r\n      Keep({backdrop_path, overview, vote_average, poster_path,year, title, key})  \r\n      \r\n    //   document.body.animate(setTimeout(window.scrollTo(0, document.body.scrollHeight), 1000), 500)\r\n    }\r\n    function BuildCard({backdrop_path, overview, vote_average, poster_path,year, title}){\r\n        results = {backdrop_path, overview, vote_average, poster_path,year, title}\r\n        \r\n        const card = document.createElement('div')\r\n        card.classList.add('card')\r\n        card.innerHTML = `            \r\n        <p class=\"click-display\" onclick='openOverview(this)' id=${index}><i id=${index} class=\"fas fa-trash\" onclick=remove(this)></i>Sinopse</p>\r\n        <p class='popularity' id=${results.vote_average}>${results.vote_average}</p>\r\n        <h1 class='movie-title'>${results.title}</h1>\r\n        <img src=${`https://image.tmdb.org/t/p/w500${results.poster_path}`}    alt=\"Poster do Filme\" class='poster' />\r\n        <h2 class='year'>${results.year}</h2>\r\n        \r\n        `\r\n        cards.appendChild(card)\r\n        index ++\r\n    }\r\n    function Keep({backdrop_path, overview, vote_average, poster_path,year, title, key}){\r\n        infos = {title: title,  backdrop_path: backdrop_path, vote_average: vote_average, poster_path: poster_path,year: year, overview: overview, key:key}\r\n        movieList.push(title)\r\n        localStorage.setItem('movielist', movieList)\r\n        localStorage.setItem(title, JSON.stringify(infos))\r\n    }\r\n    function refreshPage(){ \r\n        setTimeout(()=>{document.location.reload(true)}, 1000); \r\n    }\r\n    return(\r\n    <div className=\"container\">\r\n        <header className='header'>\r\n            <h1 className='principal-title'>The Best<MdLocalMovies className='movie-icon'/></h1>\r\n            <nav className='navigation'>\r\n                <ul className='menu'>\r\n                    <Link to='/app' className='link-menu' onClick={refreshPage}>\r\n                        <li className='menu-item'>Melhores avaliações</li>\r\n                    </Link>\r\n                    <Link to='' className='link-menu'>\r\n                        <li className='menu-item'>Drama</li>\r\n                    </Link>\r\n                    <Link to='/' className='link-menu' onClick={refreshPage}>\r\n                        <li className='menu-item'>Procure por um filme</li>\r\n                    </Link>\r\n                    <Link to='/family' className='link-menu' onClick={refreshPage}>\r\n                        <li className='menu-item'>Para a família toda</li>\r\n                    </Link>\r\n                    <Link to='/best' className='link-menu' onClick={refreshPage}>\r\n                        <li className='menu-item'>Meus best movies</li>\r\n                    </Link>\r\n                </ul>\r\n            </nav>\r\n            <form className=\"search-container\" onSubmit={(event)=>{\r\n                event.preventDefault()\r\n                GetMovie(movie)\r\n                }}><input type=\"text\" placeholder='Digite aqui um filme legal' className='search-input' onKeyUp={(event)=>{setMovie(event.target.value)\r\n            \r\n            }} /><input type='submit'  className='submit-btn' value=''/><FaSearch className='search-icon' onClick={()=>{\r\n                GetMovie(movie)\r\n                }}></FaSearch></form>\r\n        </header>\r\n        <section className=\"container-overview\">\r\n            <div className=\"overview-content\">\r\n                <div className=\"header-overview\">\r\n                    <h1 className='overview-title'>{results.title}</h1>\r\n                    <MdClose className='icon-close' onclick='closeOverview()'/>\r\n                </div>\r\n                <div className=\"overview-display\">\r\n                    <img src={`https://image.tmdb.org/t/p/w500${results.backdrop_path}`} alt=\"Movie Logo\" className='overview-img'/>\r\n                    <p className=\"overview\">{results.overview}</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n    </div>\r\n    )\r\n}\r\nexport default Main\r\n","import { useEffect, useState } from \"react\"\r\nimport {MdLocalMovies, MdKeyboardArrowLeft, MdKeyboardArrowRight, MdClose} from 'react-icons/md'\r\nimport {BiArrowBack} from 'react-icons/bi'\r\nimport {Link} from 'react-router-dom'\r\nimport {AiOutlineStar, AiFillStar} from 'react-icons/ai'\r\nvar index = 0\r\nvar movieList = []\r\nvar infos = []\r\nfunction Avaliations(){\r\n    const cards = document.querySelector('#cards')\r\n    const [refresh, setRefresh] = useState('')\r\n    cards.innerHTML = ''\r\n    useEffect(()=>{getSheet()}, [])\r\n    function getSheet(){\r\n        var list = localStorage.getItem('movielist-2')  \r\n        if (list!=null && list!=''){\r\n            movieList = list.split(',')\r\n            for(var i = 0; i < movieList.length; i++){\r\n                const items = localStorage.getItem(movieList[i])\r\n                var div = JSON.parse(items)\r\n               \r\n                const card = document.createElement('div')\r\n                card.classList.add('card')\r\n                card.innerHTML = `            \r\n                <p class=\"click-display\" onclick=openOverview2(this) id=${index}>Sinopse</p>\r\n                <p class='popularity' id=${div.vote_average}>${div.vote_average}</p>\r\n                <h1 class='movie-title'>${div.title}</h1>\r\n                <img src=${`https://image.tmdb.org/t/p/w500${div.poster_path}`}    alt=\"Poster do Filme\" class='poster' />\r\n                \r\n                `\r\n                cards.appendChild(card)\r\n                index ++\r\n            }\r\n        }\r\n        else{\r\n            return\r\n        }}\r\n    async function GetMovie(){\r\n        const api_key = 'd18a4f16ec6506238fafbda0ee9d740d'\r\n        const response= await fetch(`http://api.themoviedb.org/3/discover/movie?certification_country=US&certification=R&sort_by=vote_average.desc&api_key=${api_key}`)\r\n        const data = await response.json()\r\n        const {results} = data\r\n        console.log(results)\r\n\r\n        for(var i= 0;i<results.length;i++){\r\n            console.log(results)\r\n            var {backdrop_path, overview, vote_average, poster_path, release_date, title, id} = results[i]\r\n            const video_response = await fetch (`\r\n            https://api.themoviedb.org/3/movie/${id}/videos?api_key=${api_key}&language=en-US`)\r\n            const video_data = await video_response.json()\r\n            var newresults = video_data.results[0]\r\n            if (newresults === undefined){\r\n                var key = ''\r\n                \r\n            } else{\r\n                var {key} = newresults\r\n            }\r\n            \r\n            if (title === '\"And So, It Goes\"'){\r\n                continue\r\n            }\r\n            Keep({backdrop_path, overview, vote_average, poster_path, title, key})\r\n            getSheet()\r\n        }\r\n        // const {backdrop_path, overview, vote_average, poster_path, release_date, title} = results[0]\r\n        // const date = release_date.split('-')\r\n        // const year = date[0]\r\n        // setResults({backdrop_path, overview, vote_average, poster_path,year, title})\r\n        // BuildCard({backdrop_path, overview, vote_average, poster_path,year, title})\r\n    }\r\n    function BuildCard({backdrop_path, overview, vote_average, poster_path,year, title}){\r\n        var results = {backdrop_path, overview, vote_average, poster_path, title}\r\n        \r\n        const card = document.createElement('div')\r\n        card.classList.add('card')\r\n        card.innerHTML = `            \r\n        <p class=\"click-display\" onclick='openOverview(this)' id=${index}>Sinopse</p>\r\n        <p class='popularity' id=${results.vote_average}>${results.vote_average}</p>\r\n        <h1 class='movie-title'>${results.title}</h1>\r\n        <img src=${`https://image.tmdb.org/t/p/w500${results.poster_path}`}    alt=\"Poster do Filme\" class='poster' />\r\n       \r\n        \r\n        `\r\n        cards.appendChild(card)\r\n        index ++\r\n    }\r\n    function Keep({backdrop_path, overview, vote_average, poster_path,year, title, key}){\r\n        infos = {title: title,  backdrop_path: backdrop_path, vote_average: vote_average, poster_path: poster_path,year: year, overview: overview, key:key}\r\n        movieList.push(title)\r\n        localStorage.setItem('movielist-2', movieList)\r\n        localStorage.setItem(title, JSON.stringify(infos))\r\n    }\r\n    useEffect(()=>{if (movieList.length === 0){\r\n        GetMovie()\r\n    }}, [])\r\n    console.log(movieList)\r\n    function refreshPage(){ \r\n        setTimeout(()=>{document.location.reload(true)}, 1); \r\n    }\r\n    // <nameRepository>[]\r\n    return(\r\n        <div className='container'>\r\n            <header className='header' style={{marginBottom: 80}}>\r\n                <h1 className='principal-title'>The Best<MdLocalMovies className='movie-icon'/></h1>\r\n                <Link onClick={ refreshPage } to='/'  >\r\n                    <BiArrowBack size={50} className='back-icon' />\r\n                </Link>\r\n                \r\n                <nav className='navigation'>\r\n                    <ul className='menu'>\r\n                        <Link to='/app' className='link-menu' >\r\n                            <li className='menu-item'>Melhores avaliações</li>\r\n                        </Link>\r\n                        <Link to='' className='link-menu'>\r\n                            <li className='menu-item'>Drama</li>\r\n                        </Link>\r\n                        <Link to='/' onClick={ refreshPage } className='link-menu'>\r\n                            <li className='menu-item'>Procure por um filme</li>\r\n                        </Link>\r\n                        <Link to='/family' className='link-menu' onClick={refreshPage}>\r\n                            <li className='menu-item'>Para a família toda</li>\r\n                        </Link>\r\n                        <Link to='/best' className='link-menu ' onClick={refreshPage}>\r\n                            <li className='menu-item'>Meus best movies</li>\r\n                        </Link>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            <section className=\"container-overview\">\r\n                    <div className=\"overview-content\">\r\n                        <div className=\"header-overview\">\r\n                            \r\n                            <h1 className='overview-title'></h1>\r\n                            <MdClose className='icon-close' onclick='closeOverview()'/>\r\n                        </div>\r\n                        <div className=\"overview-display\">\r\n                            <img src={`https://image.tmdb.org/t/p/w500`} alt=\"Movie Logo\" className='overview-img'/>\r\n                            <p className=\"overview\"></p>\r\n                        </div>\r\n                    </div>\r\n            </section>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Avaliations\r\n","import { useEffect, useState } from \"react\"\r\nimport {MdLocalMovies, MdKeyboardArrowLeft, MdKeyboardArrowRight, MdClose} from 'react-icons/md'\r\nimport {BiArrowBack} from 'react-icons/bi'\r\nimport {Link} from 'react-router-dom'\r\nimport {AiOutlineStar, AiFillStar} from 'react-icons/ai'\r\nvar index = 0\r\nvar movieList = []\r\nvar infos = []\r\nfunction BestMovies(){\r\n    const cards = document.querySelector('#cards')\r\n    const [refresh, setRefresh] = useState('')\r\n    cards.innerHTML = ''\r\n    useEffect(()=>{getSheet()}, [])\r\n    function getSheet(){\r\n        var list = localStorage.getItem('favlist')  \r\n        console.log(list)\r\n        if (list!=null && list!=''){\r\n            movieList = list.split(',')\r\n            for(var i = 0; i < movieList.length; i++){\r\n                const items = localStorage.getItem(movieList[i])\r\n                var div = JSON.parse(items)\r\n               console.log(div)\r\n                const card = document.createElement('div')\r\n                card.classList.add('card')\r\n                card.innerHTML = `            \r\n                <p class=\"click-display\" onclick=openOverview3(this) id=${index}>Sinopse</p>\r\n                <p class='popularity' id=${div.vote_average}>${div.vote_average}</p>\r\n                <h1 class='movie-title'>${div.title}</h1>\r\n                <img src=${`https://image.tmdb.org/t/p/w500${div.poster_path}`}    alt=\"Poster do Filme\" class='poster' />\r\n                \r\n                `\r\n                cards.appendChild(card)\r\n                index ++\r\n            }\r\n        }\r\n        else{\r\n            return\r\n        }}\r\n        function refreshPage(){ \r\n            setTimeout(()=>{document.location.reload(true)}, 1); \r\n        } \r\n        return(\r\n            <div className='container'>\r\n                <header className='header' style={{marginBottom: 80}}>\r\n                    <h1 className='principal-title'>The Best<MdLocalMovies className='movie-icon'/></h1>\r\n                    <Link  to='/'  onClick={refreshPage}>\r\n                        <BiArrowBack size={50} className='back-icon' />\r\n                    </Link>\r\n                    \r\n                    <nav className='navigation'>\r\n                        <ul className='menu'>\r\n                            <Link to='/app' className='link-menu' onClick={refreshPage} >\r\n                                <li className='menu-item'>Melhores avaliações</li>\r\n                            </Link>\r\n                            <Link to='' className='link-menu'>\r\n                                <li className='menu-item'>Drama</li>\r\n                            </Link>\r\n                            <Link to='/'  className='link-menu' onClick={refreshPage}>\r\n                                <li className='menu-item'>Procure por um filme</li>\r\n                            </Link>\r\n                            <Link to='/family' className='link-menu' onClick={refreshPage}>\r\n                                <li className='menu-item'>Para a família toda</li>\r\n                            </Link>\r\n                            <Link to='/best' className='link-menu'>\r\n                                <li className='menu-item'>Meus best movies</li>\r\n                            </Link>\r\n                        </ul>\r\n                    </nav>\r\n                </header>\r\n                <section className=\"container-overview\">\r\n                        <div className=\"overview-content\">\r\n                            <div className=\"header-overview\">\r\n                                \r\n                                <h1 className='overview-title'></h1>\r\n                                <MdClose className='icon-close' onclick='closeOverview()'/>\r\n                            </div>\r\n                            <div className=\"overview-display\">\r\n                                <img src={`https://image.tmdb.org/t/p/w500`} alt=\"Movie Logo\" className='overview-img'/>\r\n                                <p className=\"overview\"></p>\r\n                            </div>\r\n                        </div>\r\n                </section>\r\n            </div>\r\n    \r\n        )\r\n    }\r\nexport default BestMovies","import { useEffect, useState } from \"react\"\r\nimport {MdLocalMovies, MdKeyboardArrowLeft, MdKeyboardArrowRight, MdClose} from 'react-icons/md'\r\nimport {BiArrowBack} from 'react-icons/bi'\r\nimport {Link} from 'react-router-dom'\r\nimport {AiOutlineStar, AiFillStar} from 'react-icons/ai'\r\nvar index = 0\r\nvar movieList = []\r\nvar infos = []\r\nfunction Family(){\r\n    const cards = document.querySelector('#cards')\r\n    const [refresh, setRefresh] = useState('')\r\n    cards.innerHTML = ''\r\n    useEffect(()=>{getSheet()}, [])\r\n    function getSheet(){\r\n        var list = localStorage.getItem('familymovies')  \r\n        if (list!=null && list!=''){\r\n            movieList = list.split(',')\r\n            for(var i = 0; i < movieList.length; i++){\r\n                const items = localStorage.getItem(movieList[i])\r\n                var div = JSON.parse(items)\r\n               \r\n                const card = document.createElement('div')\r\n                card.classList.add('card')\r\n                card.innerHTML = `            \r\n                <p class=\"click-display\" onclick=openOverview4(this) id=${index}>Sinopse</p>\r\n                <p class='popularity' id=${div.vote_average}>${div.vote_average}</p>\r\n                <h1 class='movie-title'>${div.title}</h1>\r\n                <img src=${`https://image.tmdb.org/t/p/w500${div.poster_path}`}    alt=\"Poster do Filme\" class='poster' />\r\n                <h2 class='year'>${div.year}</h2>\r\n                `\r\n                cards.appendChild(card)\r\n                index ++\r\n            }\r\n        }\r\n        else{\r\n            return\r\n        }}\r\n    async function GetMovie(){\r\n        const api_key = 'd18a4f16ec6506238fafbda0ee9d740d'\r\n        const response= await fetch(`https://api.themoviedb.org/3/discover/movie?certification_country=US&certification.lte=G&sort_by=popularity.desc&api_key=${api_key}&language=pt-br`)\r\n        const data = await response.json()\r\n        const {results} = data\r\n        console.log(results)\r\n\r\n        for(var i= 0;i<results.length;i++){\r\n            console.log(results)\r\n            var {backdrop_path, overview, vote_average, poster_path, release_date, title, id} = results[i]\r\n            const date = release_date.split('-')\r\n            const year = date[0]\r\n            const video_response = await fetch (`\r\n            https://api.themoviedb.org/3/movie/${id}/videos?api_key=${api_key}&language=en-US`)\r\n            const video_data = await video_response.json()\r\n            var newresults = video_data.results[0]\r\n            if (newresults === undefined){\r\n                var key = ''\r\n                \r\n            } else{\r\n                var {key} = newresults\r\n            }\r\n            \r\n            if (title === '\"And So, It Goes\"'){\r\n                continue\r\n            }\r\n            Keep({backdrop_path, overview, vote_average, poster_path, title, key, year})\r\n            getSheet()\r\n        }\r\n        // const {backdrop_path, overview, vote_average, poster_path, release_date, title} = results[0]\r\n        // const date = release_date.split('-')\r\n        // const year = date[0]\r\n        // setResults({backdrop_path, overview, vote_average, poster_path,year, title})\r\n        // BuildCard({backdrop_path, overview, vote_average, poster_path,year, title})\r\n    }\r\n    function BuildCard({backdrop_path, overview, vote_average, poster_path,year, title}){\r\n        var results = {backdrop_path, overview, vote_average, poster_path, title, year}\r\n        \r\n        const card = document.createElement('div')\r\n        card.classList.add('card')\r\n        card.innerHTML = `            \r\n        <p class=\"click-display\" onclick='openOverview(this)' id=${index}>Sinopse</p>\r\n        <p class='popularity' id=${results.vote_average}>${results.vote_average}</p>\r\n        <h1 class='movie-title'>${results.title}</h1>\r\n        <img src=${`https://image.tmdb.org/t/p/w500${results.poster_path}`}    alt=\"Poster do Filme\" class='poster' />\r\n        <h2 class='year'>${results.year}</h2>\r\n        \r\n        `\r\n        cards.appendChild(card)\r\n        index ++\r\n    }\r\n    function Keep({backdrop_path, overview, vote_average, poster_path,year, title, key}){\r\n        infos = {title: title,  backdrop_path: backdrop_path, vote_average: vote_average, poster_path: poster_path,year: year, overview: overview, key:key}\r\n        movieList.push(title)\r\n        localStorage.setItem('familymovies', movieList)\r\n        localStorage.setItem(title, JSON.stringify(infos))\r\n    }\r\n    useEffect(()=>{if (movieList.length === 0){\r\n        GetMovie()\r\n    }}, [])\r\n    console.log(movieList)\r\n    function refreshPage(){ \r\n        setTimeout(()=>{document.location.reload(true)}, 1); \r\n    }\r\n    // <nameRepository>[]\r\n    return(\r\n        <div className='container'>\r\n            <header className='header' style={{marginBottom: 80}}>\r\n                <h1 className='principal-title'>The Best<MdLocalMovies className='movie-icon'/></h1>\r\n                <Link onClick={ refreshPage } to='/'  >\r\n                    <BiArrowBack size={50} className='back-icon' />\r\n                </Link>\r\n                \r\n                <nav className='navigation'>\r\n                    <ul className='menu'>\r\n                        <Link to='/app' className='link-menu'  onClick={refreshPage}>\r\n                            <li className='menu-item'>Melhores avaliações</li>\r\n                        </Link>\r\n                        <Link to='' className='link-menu'>\r\n                            <li className='menu-item'>Drama</li>\r\n                        </Link>\r\n                        <Link to='/' onClick={ refreshPage } className='link-menu'>\r\n                            <li className='menu-item'>Procure por um filme</li>\r\n                        </Link>\r\n                        <Link to='/family' className='link-menu'>\r\n                            <li className='menu-item'>Para a família toda</li>\r\n                        </Link>\r\n                        <Link to='/best' className='link-menu' onClick={refreshPage}>\r\n                            <li className='menu-item'>Meus best movies</li>\r\n                        </Link>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            <section className=\"container-overview\">\r\n                    <div className=\"overview-content\">\r\n                        <div className=\"header-overview\">\r\n                            \r\n                            <h1 className='overview-title'></h1>\r\n                            <MdClose className='icon-close' onclick='closeOverview()'/>\r\n                        </div>\r\n                        <div className=\"overview-display\">\r\n                            <img src={`https://image.tmdb.org/t/p/w500`} alt=\"Movie Logo\" className='overview-img'/>\r\n                            <p className=\"overview\"></p>\r\n                        </div>\r\n                    </div>\r\n            </section>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Family\r\n","import {BrowserRouter, Switch,  Route} from 'react-router-dom'\r\nimport Main from '../components/Main'\r\nimport Avaliations from '../components/Avaliations'\r\nimport BestMovies from '../components/BestMovies'\r\nimport Family from '../components/Family'\r\nconst Routes = () => {\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path='/' component={Main} exact/>\r\n                <Route path='/app' component={Avaliations}/>\r\n                <Route path='/best' component={BestMovies}/>\r\n                <Route path='/family' component={Family}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )}\r\nexport default Routes","import Main from './components/Main.jsx'\r\nimport Routes from  './routes/index'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/global.css';\r\nimport App from './App';\r\nimport Header from './components/Main'\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// const btn = document.querySelector('.search-icon')\r\n// function Canvas(){\r\n  \r\n//   var c= document.querySelector('.avaliation');\r\n//   console.log(c)\r\n//   var ctx=c.getContext('2d');\r\n//   var txt = document.querySelector('.popularity')\r\n//   var z = 20\r\n//   ctx.beginPath();    \r\n//   ctx.arc(77,32,25,0,2*Math.PI);\r\n//   ctx.fillStyle=\"transparent\";\r\n//   var grd = ctx.createLinearGradient(0, 0, 200, 0);\r\n//   grd.addColorStop(0.2, \"#038eb1\");\r\n//   grd.addColorStop(0.1, \"#040333\");\r\n//   ctx.strokeStyle = grd\r\n//   ctx.lineWidth = 5;\r\n//   ctx.fill();\r\n//   ctx.stroke();\r\n  \r\n//   console.log(txt.textContent)\r\n//   ctx.beginPath();    \r\n//   ctx.font=\"25px Lato\";\r\n//   ctx.fillStyle=\"white\";\r\n//   ctx.fillText(`${txt.id}`,62,42);\r\n// }\r\n// function Add(){\r\n//   var card = document.querySelector('.card')\r\n//   var cards = document.querySelector('.cards')\r\n//   console.log(cards)\r\n// }\r\n// btn.addEventListener('click', Canvas)\r\n// Add()\r\n"],"sourceRoot":""}